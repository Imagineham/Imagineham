Hamlet Fernandez
Jan 12, 2021

Computer Architecture for Scientists (Winter 2021)

Homework #1

Problems from Chapter 1

1.1 Enumerate five devices in your daily life that have computers inside today, but didn’t
20 years ago. For each, explain why computing benefits the device. For the user, and for
the company who sold it.

Nintendo switch
Lightbulbs (bluetooth lights)
Google Home(speakers, radios)
Headphones
OMNY (apple pay, transportation)
Debit card


1.3 The integration of computing and networking have accelerated many activities in
society, e-commerce is one example. Analyze the steps to identify and purchase an article
of clothing in a world without the internet, smartphones, and e-commerce. Analyze the
steps in today’s modern world. Explain how the latency to receive the desired article has
changed. Explain how the time investment required of you has changed.

Without internet, smartphones, e-commerce?
    traveling outside, going to a store, individual, group of individuals, selecting wanted article, purchases with physical currency
    dollars, coins, greeting/goodbye etc etc.  perhaps can try on clothes! can see quality of clothes!

today's modern world?
    google item you  want, where's it sold? many options many websites. can be done on phone, laptop, google home/alexa devices (interactive AI)
    not necessary to meet with people physically, can buy an article of clothing without meeting anyone. but also cannot try on clothes or 
    see quality of clothes

1.6 Another pervasive communication-use of computing is social media. Describe several features of how 
you interact with social media, and how computing is used to create posts, decide when they are visible, 
and even target advertising?

facebook groups, polls, voting systems, comments sections, replying to comments, liking disliking hearting posts
discord, groups, channels, video calls, phone calls, reactions, import own reactions, create reactions
using discord you can see what others r listening to if enabled, people themselves send promotive content


Problems from Chapter 2

2.1

    Part A: Set the value to 0 for registers X18-X25
            add x18, x18, x2
            add x19, x18, x0
            add x20, x18, x0
            add x21, x18, x0
            add x22, x18, x0
            add x23, x18, x0
            add x24, x18, x0
            add x25, x18, x0

    Part B: Put the first 8 prime numbers (1, 2, 3, 5, 7, 11, 13, 17) into registers X18-X25
            addi x18, x18, 1
            addi x19, x19, 2
            addi x20, x20, 3
            addi x21, x21, 5
            addi x22, x22, 7
            addi x23, x23, 11
            addi x24, x24, 13
            addi x25, x25, 17

    Part F: 

    64-bit version: Put the value 0x0 0123 4567 89AB into X18
        addi x12, x0, 0x012
        slli x12, x12, 36
        addi x13,x0, 0x345
        slli x13, x13, 24
        addi x14, x0, 0x678
        slli x14, x14, 12
        add x13, x12, x13
        add x14, x13, x14
        addi x14, x14, 0x7FF
        addi, x14, x14, 0x1AC
        add x18, x18, x14

    32-bit version: Put the value 0x0 4567 89AB into x18
        addi x12, x0, 0x045
        slli x12, x12, 24
        addi x13, x0, 0x678
        slli x13, x13, 12
        add x13, x12, x13
        addi x13, x13, 0x7FF
        addi x13, x13, 0x1AC
        add x18, x18, x13

2.2

    Part A:
    
        64-bit version: Load the value from address 0x0 0FFF FFFF FFFF into X20
            addi x12, x0, -1
            srli x12, x12, 20 //get rid of the 20 most significant bits
            addi x13, x0, 7 //test value
            sd x13, 0(x12)
            ld x20, 0(x12)


        32-bit version: Load the value from address 0x0 FFFF FFFF into X20
            addi x12, x0, -1 
            addi x13, x0, 7 //test value
            sw x13, 0(x12) 
            lw x20, 0(x12) 

    Part G: 
    
        64-bit version: Store the value 127 as 64-bit value into address 0x0 0101 0101 0101
            addi x12, x0, 1
            slli x13, x12, 40
            slli x14, x12, 32
            slli x15, x12, 24
            slli x16, x12, 16
            slli, x17, x12, 8
            add x18, x12, x13
            add x18, x18, x14
            add x18, x18, x15
            add x18, x18, x16
            add x18, x18, x17 //adress 0x010101010101 in x18
            addi x19, x0, 127 //desired value
            sd x19, 0(x18)

        32-bit version: Store the value 127 as a 32-bit value into address 0x0 0101 0101
            addi x12, x0, 1
            slli x13, x12, 24
            slli x14, x12, 16
            slli x15, x12, 8
            add x16, x12, x13
            add x16, x16, x14
            add x16, x16, x15 //address 0x01010101 in x16
            addi x17, x0, 127 //desired value
            sw x17, 0(x16)

    Part I:
    
        64-bit version: Store the value 27 as 8-bit value (byte) into address 0x0 0123 4567 89AB
            addi x12, x0, 0x012
            slli x12, x12, 36
            addi x13,x0, 0x345
            slli x13, x13, 24
            addi x14, x0, 0x678
            slli x14, x14, 12
            add x13, x12, x13
            add x14, x13, x14
            addi x14, x14, 0x7FF
            addi, x14, x14, 0x1AC
            add x18, x18, x14
            addi x19, x0, 27
            sd x19, 0(x18)

        32-bit version: Store the value 27 as an 8-bit value (byte) into address 0x0 1234 5678
            addi x12, x0, 0x012
            slli x12, x12, 24
            addi x13, x0, 0x345
            slli x13, x13, 12
            add x13, x12, x13
            addi x13, x13, 0x678
            addi x14, x0, 27
            sw x14 0(x13)

2.5 


2.9 


2.21 








